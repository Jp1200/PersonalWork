{"version":3,"sources":["resume.png","Resource/IG420.jpg","Resource/IG421.jpg","Projects.js","Photography.js","Mainpage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Projects","Container","React","Component","Photography","fluid","className","Row","Col","Card","Img","src","require","Main","handleClose","setState","show","handleShow","state","id","url","align","ButtonGroup","aria-label","size","Button","variant","to","Modal","this","onHide","Image","width","height","exact","path","Media","onClick","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","hydrate","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,oC,4ECA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,yNCWtBC,E,uKAInB,OACE,kBAACC,EAAA,EAAD,U,GALkCC,IAAMC,W,QCFvBC,E,uKAIjB,OAEE,kBAACH,EAAA,EAAD,CAAWI,OAAK,GAEd,uBAAGC,UAAU,aAAb,wEAEA,kBAACC,EAAA,EAAD,CAAKD,UAAU,mBAET,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMH,UAAU,QACd,kBAACG,EAAA,EAAKC,IAAN,CAAUC,IAAKC,EAAQ,QAI3B,kBAACJ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMH,UAAU,QACd,kBAACG,EAAA,EAAKC,IAAN,CAAWC,IAAKC,EAAQ,SAalC,kBAACL,EAAA,EAAD,KACE,uBAAGD,UAAU,aAAb,mJ,GAlC+BJ,IAAMC,W,OCe1BU,E,kDAGnB,aAAc,IAAD,8BACX,gBAOFC,YAAc,WACZ,EAAKC,SAAS,CAACC,MAAK,KATT,EAYbC,WAAa,WACV,EAAKF,SAAS,CAACC,MAAK,KAXrB,EAAKE,MAAQ,CACXF,MAAM,GAHG,E,qDAqBX,OACE,kBAACf,EAAA,EAAD,CAAWK,UAAU,MAAMa,GAAG,sBAS1B,kBAACZ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,wBAAIF,UAAU,UAAd,cACE,kBAAC,aAAD,CAAYA,UAAU,QAAQc,IAAI,0CAClC,kBAAC,aAAD,CAAYd,UAAU,QAAQc,IAAI,8BAClC,kBAAC,aAAD,CAAYd,UAAU,QAAQc,IAAI,uDAClC,kBAAC,aAAD,CAAYd,UAAU,QAAQc,IAAI,uDAEpC,wBAAId,UAAU,gBAAd,mEAKF,kBAACE,EAAA,EAAD,CAAKa,MAAM,OAOT,kBAACC,EAAA,EAAD,CAAaC,aAAW,QAAQC,KAAK,MACnC,kBAACC,EAAA,EAAD,CAAQnB,UAAU,gBAAgBoB,QAAQ,iBAAgB,kBAAC,IAAD,CAAMpB,UAAU,OAAOqB,GAAG,KAA1B,SAC1D,kBAACF,EAAA,EAAD,CAAQnB,UAAU,gBAAiBoB,QAAQ,iBAAgB,kBAAC,IAAD,CAAMpB,UAAU,OAAOqB,GAAG,aAA1B,aAC3D,kBAACF,EAAA,EAAD,CAAQnB,UAAU,gBAAiBoB,QAAQ,iBAAgB,kBAAC,IAAD,CAAMpB,UAAU,OAAOqB,GAAG,gBAA1B,gBAC3D,kBAACF,EAAA,EAAD,CAAQnB,UAAU,gBAAiBoB,QAAQ,iBAAgB,kBAAC,IAAD,CAAMpB,UAAU,OAAOqB,GAAG,YAA1B,eAMjE,kBAACC,EAAA,EAAD,CAAOZ,KAAMa,KAAKX,MAAMF,KAAMc,OAAQD,KAAKf,aAEzC,kBAACiB,EAAA,EAAD,CAAQC,MAAO,IAAKC,OAAQ,KAAMtB,IAAKC,EAAQ,OAGnD,kBAACL,EAAA,EAAD,KACE,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAO2B,OAAK,EAACC,KAAK,KAIhB,kBAAClC,EAAA,EAAD,CAAWI,OAAK,GACd,6BACA,wBAAIgB,MAAM,SAASf,UAAU,gBAA7B,aACA,kBAACC,EAAA,EAAD,KAGE,6BACA,6BACA,6BAEA,6BACA,kBAAC6B,EAAA,EAAD,CACE9B,UAAU,SACV,kBAACyB,EAAA,EAAD,CAEEM,QAASR,KAAKZ,WACdN,IAAKC,EAAQ,IAEboB,MAAO,IAAI,EACXC,OAAQ,aAMlB,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,aAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,gBAEhB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,oB,GA5GIjC,IAAMC,W,MCFzBmC,MAjBf,WACE,OACE,oCACE,kBAAC,EAAD,MACA,yBAAKhC,UAAU,WACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,wBACf,yBAAKA,UAAU,wBACf,yBAAKA,UAAU,wBACf,yBAAKA,UAAU,4BCFnBiC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBpC,QACf8B,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,WAO5BU,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,MCtFjEC,IAASC,QACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDQnB,SAAkBpB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIoB,IAAIC,gBAAwB5B,OAAOC,SAAS4B,MACpDC,SAAW9B,OAAOC,SAAS6B,OAIvC,OAGF9B,OAAO+B,iBAAiB,QAAQ,WAC9B,IAAM1B,EAAK,UAAMuB,gBAAN,sBAEP9B,IAgEV,SAAiCO,EAAOC,GAEtC0B,MAAM3B,EAAO,CACX4B,QAAS,CAAE,iBAAkB,YAE5BvB,MAAK,SAAAwB,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C/B,UAAUC,cAAc+B,MAAM7B,MAAK,SAAAC,GACjCA,EAAa6B,aAAa9B,MAAK,WAC7BV,OAAOC,SAASwC,eAKpBrC,EAAgBC,EAAOC,MAG1Be,OAAM,WACLJ,QAAQC,IACN,oEAvFAwB,CAAwBrC,EAAOC,GAI/BC,UAAUC,cAAc+B,MAAM7B,MAAK,WACjCO,QAAQC,IACN,iHAMJd,EAAgBC,EAAOC,OC9B/BE,K","file":"static/js/main.f4b17fb4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/resume.b4fa4d58.png\";","module.exports = __webpack_public_path__ + \"static/media/IG420.abcc762c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IG421.fefc0611.jpg\";","import React from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Breadcrumb from 'react-bootstrap/Breadcrumb'\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Media from 'react-bootstrap/Media';\nimport Image from 'react-bootstrap/Image';\nimport Modal from 'react-bootstrap/Modal';\n\nexport default class Projects extends React.Component{\n\n\n  render(){\n  return(\n    <Container>\n\n\n\n\n\n      \n    </Container>\n  )\n}\n}\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\n\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n// import Image from 'react-bootstrap/Image';\n// import Modal from 'react-bootstrap/Modal';\n\nexport default class Photography extends React.Component{\n\n\n  render(){\n    return (\n\n      <Container fluid >\n\n        <p className='card-desc'>Sample images from my Instagram account. Taken on large format film.\n        </p>\n        <Row className='photo-container'>\n\n              <Col>\n                <Card className='card'>\n                  <Card.Img src={require('./Resource/IG420.jpg')}/>\n\n                </Card>\n              </Col>\n              <Col>\n                <Card className='card'>\n                  <Card.Img  src={require('./Resource/IG421.jpg')}/>\n                </Card>\n              </Col>\n\n              {/* <Col>\n                <Card className='card'>\n                  <Card.Img  src={require('./Resource/Justice3-2.jpg')}/>\n                </Card>\n              </Col> */}\n\n\n\n        </Row>\n        <Row >\n          <p className='card-desc'>\n\n            \"To me, photography is the simultaneous recognition, in a fraction of a second, of the significance of an event.\"\n\n            - Henri Cartier-Bresson\n          </p>\n        </Row>\n      </Container>\n    )\n  }\n}\n","import React from 'react';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\n\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Media from 'react-bootstrap/Media';\nimport Image from 'react-bootstrap/Image';\nimport Modal from 'react-bootstrap/Modal';\nimport { SocialIcon } from 'react-social-icons';\n\n\n// File imports ######\nimport Projects from './Projects.js';\nimport Photography from './Photography.js';\n// import { Router, Route, Switch } from \"react-router\";\nimport {\n\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nexport default class Main extends React.Component {\n\n\n  constructor(){\n    super()\n    this.state = {\n      show: false\n    }\n  }\n\n\n  handleClose = () => {\n    this.setState({show:false});\n  }\n  // const handleShow = () => setShow(true);\n  handleShow = () =>{\n     this.setState({show:true});\n\n  }\n  render(){\n\n\n\n\n    return(\n      <Container className='p-3' id=\"particle-container\">\n        {/* <Jumbotron>\n          <h1 className='header'>Full-Stack Web Developer, Physicist, Photographer and Musician</h1>\n\n\n        </Jumbotron> */}\n        {/* {particles} */}\n\n\n          <Row>\n            <Col >\n              <h3 className='header'>Jack Parker\n                <SocialIcon className='icons' url=\"https://www.instagram.com/jack_p1996/\"/>\n                <SocialIcon className='icons' url=\"https://github.com/Jp1200\"/>\n                <SocialIcon className='icons' url=\"https://www.linkedin.com/in/jack-parker-473523183/\"/>\n                <SocialIcon className='icons' url=\"https://neighborhood-farmer-market.herokuapp.com/\"/>\n              </h3>\n              <h3 className='page-wrapper'>Full-Stack Web Developer, Physicist, Photographer and Musician</h3>\n            </Col>\n\n\n\n            <Col align='end'>\n              {/* <Breadcrumb>\n                <Breadcrumb.Item>Home</Breadcrumb.Item>\n                <Breadcrumb.Item>Projects</Breadcrumb.Item>\n                <Breadcrumb.Item>Photography</Breadcrumb.Item>\n                <Breadcrumb.Item>Physics</Breadcrumb.Item>\n              </Breadcrumb> */}\n              <ButtonGroup aria-label=\"Links\" size='lg'>\n                <Button className=\"button-header\" variant=\"outline-light\"><Link className=\"link\" to=\"/\">Home</Link></Button>\n                <Button className=\"button-header\"  variant=\"outline-light\"><Link className=\"link\" to=\"/projects\">Projects</Link></Button>\n                <Button className=\"button-header\"  variant=\"outline-light\"><Link className=\"link\" to='/photography'>Photography</Link></Button>\n                <Button className=\"button-header\"  variant=\"outline-light\"><Link className=\"link\" to='/physics'>Physics</Link></Button>\n              </ButtonGroup>\n            </Col>\n\n          </Row>\n\n          <Modal show={this.state.show} onHide={this.handleClose}>\n\n            <Image  width={805} height={1025} src={require('./resume.png')}/>\n\n          </Modal>\n        <Row>\n          <Switch>\n            {/* Imports for different subjects */}\n            <Route exact path='/'>\n\n\n\n              <Container fluid>\n                <br/>\n                <h2 align='center' className='resume-modal'>Resumé</h2>\n                <Row>\n\n\n                  <br/>\n                  <br/>\n                  <br/>\n\n                  <br/>\n                  <Media\n                    className='media'>\n                    <Image\n\n                      onClick={this.handleShow}\n                      src={require('./resume.png')}\n\n                      width={805/4}\n                      height={1025/4}\n                      />\n                  </Media>\n                </Row>\n              </Container>\n            </Route>\n            <Route exact path='/projects'>\n              <Projects/>\n            </Route>\n            <Route exact path='/photography'>\n\n              <Photography/>\n            </Route>\n            <Route exact path='/physics'>\n\n            </Route>\n\n          </Switch>\n        </Row>\n\n\n      </Container>\n\n    )\n  }\n\n\n\n}\n","import React from 'react';\nimport Main from './Mainpage.js';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.scss';\nfunction App() {\n  return (\n    <>\n      <Main/>\n      <div className='page-bg'>\n        <div className='animation-wrapper'>\n          <div className=\"particle particle-1\"></div>\n          <div className=\"particle particle-2\"></div>\n          <div className=\"particle particle-3\"></div>\n          <div className=\"particle particle-4\"></div>\n\n      </div>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  HashRouter as Router\n} from \"react-router-dom\";\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.hydrate(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}